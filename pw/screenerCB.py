# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_screenerCB.ipynb.

# %% auto 0
__all__ = ['screener_url', 'AnualReportCB']

# %% ../nbs/03_screenerCB.ipynb 2
from .core import *
from .crawler import *
from .helper import *

# %% ../nbs/03_screenerCB.ipynb 3
def screener_url(t): return f"https://www.screener.in/company/{t}/consolidated/"

# %% ../nbs/03_screenerCB.ipynb 4
class AnualReportCB(Callback):
    """
    Callback helping traveling all the links available in the same domain.
    """
    def __init__(self, tickets):
        self.order = 1
        self.links = {t : None for t in tickets}


    async def  after_visit(self, crawler, idx):
        
        pg = crawler.pages[idx]
        await pg.wait(10000)
        show_more_ele = await pg.find_ele('//button[@class="a show-more-button"]')
        for i in show_more_ele:
            await i.left_click()
        #await pg.pause()
        
        annual_reports = await pg.find_ele('//div[@class="documents annual-reports flex-column"]//child::a')

        links = {(await tag.get_text()).split("from")[0].strip() : await tag.get_attribute("href") 
                      for tag in annual_reports if await tag.get_attribute("href")}
        

        for i in list(self.links.keys()):
            if i in pg.url:
                break
        self.links[i] = links

